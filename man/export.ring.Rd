% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export.ring.R
\name{export.ring}
\alias{export.ring}
\title{Export ringing data for exchange with the IFV}
\usage{
export.ring(
  DNS1 = NULL,
  DNS2 = NULL,
  rings = NULL,
  PlaceCode = NULL,
  RingerNr = NULL
)
}
\arguments{
\item{DNS1}{name of odbc database 32-bit with Driver to Microsoft access (*.mdb). Must contain correct VarTypes.}

\item{DNS2}{name of odbc database 32-bit with Driver to Microsoft access (*.mdb).}

\item{PlaceCode}{data frame with place codes in EURING notation. Coordinates are centroids of the corresponding spatial polygons. Five columns: \code{Code} (place code in EURING notation), \code{Lon} (longitude in decimal degrees) and \code{Lat} (latidude in decimal degrees), \code{strTK25} (TK25 number), \code{strPlaceCode} (four letter EURING place code).}

\item{RingerNr}{Ringer Identity (as issued by Vogelwarte Helgoland)}
}
\description{
This functions enables to export ringing data in a format that is compatible
with output of the software \href{https://www.ifv-vogelwarte.de/en/home-ifv/bird-ringing-centre/information-for-ringers/software-ring-20.html}{Ring 2.0}. The main intention is to avoid manual data entries in a situation where the ringing data has been already entered in another format. Hence, familiarity with the format of Ring 2.0 is required as well as some familiarity to code in \code{R} in order to achieve the desired output. The manual of Ring 2.0 is accessible \href{https://www.ifv-vogelwarte.de/fileadmin/resources/Beringerzentrale/RING_9.3-Programmdoku.pdf}{online}. Additionally, \code{Lookups} are available \href{https://www.ifv-vogelwarte.de/fileadmin/resources/Beringerzentrale/Lookups.mde}{here}
}
\details{
There are some prerequisites:
R must be executed as as 32 bit version, to ensure proper connectivity with the package '\code{\link{RODBC}}.
In RStudio, this can be set under \code{Tools} > \code{Global options}. Secondly, it is required to set up a Microsoft Access Drivers (.mdb) linking to databases that are specified as parameters \code{DNS1} and \code{DNS2}. To work with these channels, databases must be created \strong{before} running this function. On windows, you can use the \verb{ODBC Data Source Administrator 32-bit} for this purpose. It is required to have two such databases, whereby \code{DNS1} is used as a template that therefore needs to be a valid output of \verb{Ring 2.0}, with correctly specified data structure. \code{DNS2} is simply a copy of \code{DNS1}, which will be changed when running the function. To set up, simply search for the keyword \code{odbc} and launch \verb{ODBC Data Sources 32-bit}. Then, on the \verb{User DSN} page, click on \code{Add} and select \verb{Driver to Microsoft Access (*.mdb)}. Choose a name e.g. \code{'Ring2018'} and select as database the previously created file \code{'Ring2018.mde'}. Note, you might need to select the option to show all file types, as '.mde' is not shown by default.

It may happen that the export failes due to a variety of errors related to SQL operations. Then, the best way might be to restart with a freshly created DNS2 connection. Further, it might help to play with the function parameters in \code{\link[RODBC]{sqlDrop}} and \code{\link[RODBC]{sqlSave}}
}
